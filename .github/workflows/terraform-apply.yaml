name: Deploy na AWS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Configurar ambiente AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
          
      - name: Instalar o Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Inicializar o Terraform
        run: |
          cd infra
          terraform init
      - name: Fazer o deploy da aplicação
        run: |
          cd infra
          terraform apply -auto-approve

      - name: Set environment variables
        run: |
          cd infra
          echo "Terraform output:"
          terraform output -json
          echo "DB_NAME=$(terraform output db_name)" >> $GITHUB_ENV
          echo "DB_USER=$(terraform output db_user)" >> $GITHUB_ENV
          echo "DB_PASSWORD=$(terraform output db_password)" >> $GITHUB_ENV
          echo "DB_PORT=$(terraform output db_port)" >> $GITHUB_ENV
          echo "DB_HOST=$(terraform output db_host)" >> $GITHUB_ENV
      - name: Get RDS endpoint
        id: rds
        run: |
           cd infra
           echo "::set-output name=endpoint::$(terraform output rds_endpoint)"

      - name: Fazer o deploy da aplicação
        run: |
          cd infra
          terraform apply -auto-approve

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "ECR_REGISTRY: $ECR_REGISTRY"
          docker build \
          --build-arg DB_NAME=${{ env.DB_NAME }} \
          --build-arg DB_USER=${{ env.DB_USER }} \
          --build-arg DB_HOST=${{ env.DB_HOST }} \
          --build-arg DB_PASSWORD=${{ env.DB_PASSWORD }} \
          --build-arg DB_PORT=${{ env.DB_PORT }} \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
     
      - name: Set ECR_REGISTRY
        run: echo "ECR_REGISTRY=$(aws ecr describe-repositories --repository-names my-repo --query 'repositories[0].repositoryUri' --output text)" >> $GITHUB_ENV
      
      - name: Run Docker container
        run: |
          docker run -e ClientSettings__Database__Server=${{ steps.rds.outputs.endpoint }} -p 5001:8080 --name pagueme-container-1 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      - name: Cleanup
        if: ${{ failure() }}
        run: |
          cd infra
          terraform destroy -auto-approve