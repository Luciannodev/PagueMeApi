name: Deploy na AWS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v2

      - name: Configurar ambiente AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Disable debug logging
        run: echo "TF_LOG=" >> $GITHUB_ENV
      
      - name: Instalar o Terraform
        uses: hashicorp/setup-terraform@v1.3.2

      - name: Inicializar o Terraform
        run: |
          cd infra
          terraform init
          terraform apply -auto-approve

      - name: Set environment variables
        run: |
          cd infra
           DB_NAME=$(terraform output -raw db_name | grep -v "::debug::")
           echo "DB_NAME value: $DB_NAME"
           echo "DB_NAME=$DB_NAME" >> $GITHUB_ENV
           DB_USER=$(terraform output -raw db_user | grep -v "::debug::")
           echo "DB_USER=$DB_USER" >> $GITHUB_ENV
           DB_HOST=$(terraform output -raw db_host | grep -v "::debug::")
           echo "DB_HOST=$DB_HOST" >> $GITHUB_ENV
           DB_PASSWORD=$(terraform output -raw db_password | grep -v "::debug::")
           echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV
           DB_PORT=$(terraform output -raw db_port | grep -v "::debug::")
           echo "DB_PORT=$DB_PORT" >> $GITHUB_ENV
      
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "ECR_REGISTRY: $ECR_REGISTRY"
          docker build \
          --build-arg DB_NAME=${{ env.db_name }} \
          --build-arg DB_USER=${{ env.db_user }} \
          --build-arg DB_HOST=${{ env.db_host }} \
          --build-arg DB_PASSWORD=${{ env.db_password }} \
          --build-arg DB_PORT=${{ env.db_port }} \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build Docker image on EC2
        run: |
          echo "${{ secrets.EC2_PEM }}" > ec2.pem
          chmod 600 ec2.pem
          ssh -o StrictHostKeyChecking=no -i ec2.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            git clone https://github.com/Luciannodev/PagueMeApi
            cd your-repo
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          "  
      
      - name: Cleanup
        if: ${{ failure() }}
        run: |
          cd infra
          terraform destroy -auto-approve